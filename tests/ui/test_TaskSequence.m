try
    purge
end


[cDirThis, cName, cExt] = fileparts(mfilename('fullpath'));
cDirMic = fullfile(cDirThis, '..', '..', 'src');
addpath(genpath(cDirMic));


clock = mic.Clock('Master');

uiA = mic.ui.device.GetSetNumber('clock', clock, 'cName', 'A', 'cLabel', 'A');
uiB = mic.ui.device.GetSetNumber('clock', clock, 'cName', 'B', 'cLabel', 'B', 'lShowLabels', false);
uiC = mic.ui.device.GetSetNumber('clock', clock, 'cName', 'C', 'cLabel', 'C', 'lShowLabels', false);
uiD = mic.ui.device.GetSetNumber('clock', clock, 'cName', 'D', 'cLabel', 'D', 'lShowLabels', false);


% Create a list of three tasks

%{
tasks = {...
    mic.TaskFromUiGetSetNumber(uiA, 5, 0.1, uiA.getUnit().name), ...
    mic.TaskFromUiGetSetNumber(uiB, 100, 0.1, uiB.getUnit().name) ...
    mic.TaskFromUiGetSetNumber(uiC, 20, 0.1, uiC.getUnit().name) ...
};
%}


% Alternatively (DOES NOT WORK, can't get lambda working in Static


tasks = {...
    mic.Task.fromUiGetSetNumber(uiA, 5, 0.1, uiA.getUnit().name), ...
    mic.Task.fromUiGetSetNumber(uiB, 100, 0.1, uiB.getUnit().name) ...
    mic.Task.fromUiGetSetNumber(uiC, 20, 0.1, uiC.getUnit().name) ...
};



% This sequence is itself a "task" since it implements mic.interface.Task
% Uses mic.Scan under the hood to implement go()
task = mic.TaskSequence(...
    'clock', clock, ...
    'ceTasks', tasks, ...
    'dPeriod', 0.5, ...
    'cName', 'ABC at 5,100,20' ...
);


% task.go();


task2 = mic.TaskSequence(...
    'clock', clock, ...
    'ceTasks', {...
        mic.Task.fromUiGetSetNumber(uiD, 30, 0.1, uiD.getUnit().name), ...
        task ...
    }, ...
    'dPeriod', 0.5, ...
    'cName', 'ABCD at 5,100,20,30' ...
);

task3 = mic.TaskSequence(...
    'clock', clock, ...
    'ceTasks', {...
        mic.Task.fromUiGetSetNumber(uiA, 1, 0.1, uiA.getUnit().name), ...
        mic.Task.fromUiGetSetNumber(uiB, 50, 0.1, uiB.getUnit().name) ...
        mic.Task.fromUiGetSetNumber(uiC, 10, 0.1, uiC.getUnit().name) ...
    }, ...
    'dPeriod', 0.5, ...
    'cName', 'ABC at 1,50,10' ...
);


h = figure;
uiA.build(h, 10, 10);
uiB.build(h, 10, 55);
uiC.build(h, 10, 85);
uiD.build(h, 10, 115);

%{
uiButtonABC = mic.ui.common.ActiveButton(...
    'clock', clock, ...
    'cName', 'task-abc-test', ...
    'fhOnClick', @() task.go(), ...
    'fhGetColor', @() task.getColor(), ...
    'fhGetText', @() task.getMessage() ...
);


uiButtonABCD = mic.ui.common.ActiveButton(...
    'clock', clock, ...
    'cName', 'task-abcd-test', ...
    'fhOnClick', @() task2.go(), ...
    'fhGetColor', @() task2.getColor(), ...
    'fhGetText', @() task2.getMessage() ...
);

uiButtonABC.build(h, 10, 250, 200, 30);
uiButtonABCD.build(h, 10, 280, 200, 30);
%}

task4 = mic.TaskSequence(...
    'clock', clock, ...
    'ceTasks', {...
        mic.Task.fromUiGetSetNumber(uiA, 5, 0.1, uiA.getUnit().name) ...
    }, ...
    'dPeriod', 0.5, ...
    'cName', 'A at 5' ...
);

uiTaskSequenceA = mic.ui.TaskSequence(...
    'cName', 'ui-task-A', ...
    ... % 'task', mic.Task.fromUiGetSetNumber(uiA, 5, 0.1, uiA.getUnit().name), ...
    'task', task4, ...
    'lShowButton', false, ...
    'clock', clock ...
);

uiTaskSequenceABC = mic.ui.TaskSequence(...
    'cName', 'ui-task-ABC', ...
    'task', task, ...
    'clock', clock ...
);

uiTaskSequenceABC2 = mic.ui.TaskSequence(...
    'cName', 'ui-task-ABC3', ...
    'task', task3, ...
    'clock', clock ...
);

uiTaskSequenceABCD = mic.ui.TaskSequence(...
    'cName', 'ui-task-ABCD', ...
    'task', task2, ...   
    'lShowIsDone', false, ...
    'clock', clock ...
);

dTop = 150;
dSep = 30;
dWidth = 250;
uiTaskSequenceA.build(h, 10, dTop, dWidth);
dTop = dTop + dSep;
uiTaskSequenceABC.build(h, 10, dTop, dWidth);
dTop = dTop + dSep;
uiTaskSequenceABCD.build(h, 10, dTop, dWidth);
dTop = dTop + dSep;
uiTaskSequenceABC2.build(h, 10, dTop, dWidth);
